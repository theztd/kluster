name: Build bootc image

on:
  push:
    branches:
      - main
      - test-build

permissions:
  contents: read
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [amd64]   # , arm64]
    outputs:
      image: ${{ steps.vars.outputs.image }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up QEMU for cross-arch build
        uses: docker/setup-qemu-action@v3

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y buildah jq

      - name: Set image variables
        id: vars
        run: |
          IMAGE=ghcr.io/${{ github.repository }}
          echo "image=${IMAGE,,}" >> "$GITHUB_OUTPUT"

      - name: Login to GHCR
        run: echo "${{ secrets.GITHUB_TOKEN }}" | buildah login -u ${{ github.actor }} --password-stdin ghcr.io

      - name: Build and push image
        run: |
          image=${{ steps.vars.outputs.image }}
          arch=${{ matrix.arch }}
          buildah bud --arch ${arch} --tag ${image}:${arch} -f Containerfile .
          buildah push ${image}:${arch}

  manifest:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Install buildah
        run: |
          sudo apt-get update
          sudo apt-get install -y buildah

      - name: Login to GHCR
        run: echo "${{ secrets.GITHUB_TOKEN }}" | buildah login -u ${{ github.actor }} --password-stdin ghcr.io

      - name: Create and push multiarch manifest
        run: |
          image=${{ needs.build.outputs.image }}
          buildah manifest create ${image}:latest
          buildah manifest add ${image}:latest docker://${image}:amd64
          buildah manifest add ${image}:latest docker://${image}:arm64
          buildah manifest push --all ${image}:latest
